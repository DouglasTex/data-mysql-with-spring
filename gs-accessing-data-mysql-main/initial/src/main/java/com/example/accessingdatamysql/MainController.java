package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	        // Which is auto-generated by Spring, we will use it to handle the data
	private AtrativoRepository atrativoRepository;
	
	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody String addNewUser (
			@RequestParam String nome, @RequestParam String cidade, 
			@RequestParam String estado, @RequestParam String tipo,
			@RequestParam String descricao, @RequestParam String fonte) {
	    	//@ResponseBody means the returned String is the response, not a view name
			//@RequestParam means it is a parameter from the GET or POST request
	
		Atrativo n = new Atrativo();
		n.setNome(nome);
		n.setCidade(cidade);
		n.setEstado(estado);
	    n.setTipo(tipo);
	    n.setDescricao(descricao);
	    n.setFonte(fonte);
	    
	    atrativoRepository.save(n);
	    return "Saved";
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<Atrativo> getAllAtrativos() { // This returns a JSON or XML with the users
		return atrativoRepository.findAll();
	}
}